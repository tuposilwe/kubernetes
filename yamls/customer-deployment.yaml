apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: customer
  template:
    metadata:
      labels:
        app: customer
        environment: test
        tier: backend
        department: engineering
    spec:
      containers:
      - name: customer
        image: "amigoscode/kubernetes:customer-v1"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 5
        readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 5
        env:
          - name: ORDER_SERVICE
            value: "order"
        ports:
        - containerPort: 8080


---

apiVersion: v1
kind: Service
metadata:
  name: customer-node
spec:
  type: NodePort
  selector:
    app: customer
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30000

---
apiVersion: v1
kind: Service
metadata:
  name: customer
spec:
  type: ClusterIP
  selector:
    app: customer
  ports:
  - port: 80
    targetPort: 8080